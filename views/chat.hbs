<section id="chat"
         class="container">
    <div class="row"
         id="chat__row">
        <div id="chat__description-container">
            <h1>Room</h1>
            <div id="chat__description-info-box">
                <span class="mb-2"><span class="chat__label-title">Room's name</span> : {{room.name}}</span>
                <span><span class="chat__label-title">Your username</span> : {{username}}</span>
            </div>
        </div>

        <div class="row justify-content-between">
            <div class="col-8 col-lg-2 mx-auto mt-4 border border-3 p-3">
                <h3>Online Users</h3>
                <ul id="chat__user-list">
                </ul>
            </div>
            <div class="col-8 col-lg-5 mx-auto">
                <div id="chat__container">
                    <div id="chat__message-container">
                        <ul>
                        </ul>
                    </div>
                    <form id="chat__form">
                        <div id="chat__input-container">
                            <textarea type="text"
                                      id="chat__input"
                                      placeholder="ctrl + enter để gửi"></textarea>
                            <button class="btn btn-secondary align-self-center"
                                    type="submit">Send</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const roomId = "{{room.id}}";
    const username = "{{username}}";


    const chatContainerEl = document.querySelector("#chat__message-container");
    const chatListEl = document.querySelector("#chat__message-container ul");
    const form = document.querySelector("form#chat__form");

    const handleSubmitForm = (event) => {
        event.preventDefault();

        socket.emit("message", {
            roomId,
            message: chatInput.value
        });
        chatInput.value = ""; // reset
    }

    /* DOM Elements */
    const chatInput = document.querySelector("#chat__input");
    chatInput.addEventListener("keyup", event => {
        if (event.ctrlKey && event.keyCode === 13)
            handleSubmitForm(event);
        else if (event.ctrlKey && event.keyCode === 89)
            event.target.value = "";
    });


    form.addEventListener("submit", handleSubmitForm)


    socket.on("connect", () => {
        socket.emit("join-room", { username, roomId }); // bắt đầu join room
    });

    socket.on("users-change", users => {
        const userListEl = document.querySelector("#chat__user-list");
        userListEl.innerHTML = "";

        users.forEach(u => {
            const liEl = document.createElement("li");
            liEl.classList.add("chat__user-list-item");
            liEl.setAttribute("data-id", u.id);
            liEl.innerText = `${u.username}`;
            userListEl.append(liEl);
        })
    })


    socket.on("message", ({ sender, message }) => {
        // if(sender.id === socket.id)
        // <li><span class="chat__item-name self">User 1</span> : Xin chào tất cả mọi người nhé</li> 

        const nameSpan = document.createElement("span");
        nameSpan.classList.add("chat__item-name");
        if (sender.id === socket.id)
            nameSpan.classList.add("self");

        nameSpan.innerText = sender.username;


        const liEl = document.createElement("li");
        liEl.innerText = ` : ${message}`;
        liEl.prepend(nameSpan);

        chatListEl.appendChild(liEl);

        if (sender.id === socket.id)
            chatContainerEl.scrollTop = chatContainerEl.scrollHeight;
    })



</script>